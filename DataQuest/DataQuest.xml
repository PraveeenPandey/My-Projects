<?xml version="1.0" encoding="utf-8"?>
<items>
<item><title>Algorithm Complexity</title><short description>Learn how to analyze the time and space complexity of algorithms.</short description><description>Algorithms are at the center of almost any programming job — particularly in the world of data engineering, where this is a recurring topic in job interviews. In this course, you’ll learn how to assess and model the time and space complexity of algorithms (i.e., how fast they’ll be, how much memory they’ll require), and you’ll learn how to trade memory for speed.</description><Skills>Analyze the time complexity of an algorithm|Analyze the space complexity of an algorithm|Trade memory for speed</Skills><content_main_description>&lt;?xml version = "1.0"?&gt;
&lt;main module&gt;
 &lt;module1&gt;
  &lt;heading&gt;Time Complexity of Algorithms&lt;/heading&gt;
  &lt;subheading&gt;
   &lt;item1&gt;Measure the execution time of an algorithm&lt;/item1&gt;
   &lt;item2&gt;Generate random inputs for an algorithm&lt;/item2&gt;
   &lt;item3&gt;Model the execution time of an algorithm&lt;/item3&gt;
  &lt;/subheading&gt; &lt;module1&gt; &lt;module2&gt;
  &lt;heading&gt;Constant Time Complexity&lt;/heading&gt;
  &lt;subheading&gt;
   &lt;item5&gt;Identify constant time operations&lt;/item5&gt;
   &lt;item6&gt;Identify how computers manage memory&lt;/item6&gt;
   &lt;item7&gt;Refine computing time complexity models&lt;/item7&gt;
   &lt;item8&gt;Identify hidden function calls in Python.&lt;/item8&gt;
   &lt;item9&gt;Identify how lists and strings are stored in memory&lt;/item9&gt;
  &lt;/subheading&gt; &lt;module2&gt; &lt;module3&gt;
  &lt;heading&gt;Logarithmic Time Complexity&lt;/heading&gt;
  &lt;subheading&gt;
   &lt;item11&gt;Explain logarithms and logarithmic complexity&lt;/item11&gt;
   &lt;item12&gt;Apply the binary search algorithm to find elements in sorted lists&lt;/item12&gt;
  &lt;/subheading&gt; &lt;module3&gt; &lt;module4&gt;
  &lt;heading&gt;Sorting Algorithms&lt;/heading&gt;
  &lt;subheading&gt;
   &lt;item14&gt;Apply a sorting algorithm&lt;/item14&gt;
   &lt;item15&gt;Identify the time complexity of sorting in Python&lt;/item15&gt;
  &lt;/subheading&gt; &lt;module4&gt; &lt;module5&gt;
  &lt;heading&gt;Space Complexity&lt;/heading&gt;
  &lt;subheading&gt;
   &lt;item17&gt;Evaluate the space complexity of an algorithm&lt;/item17&gt;
   &lt;item18&gt;Define the relation between time and space&lt;/item18&gt;
  &lt;/subheading&gt; &lt;module5&gt; &lt;module6&gt;
  &lt;heading&gt;Guided Project: Building Fast Queries on a CSV&lt;/heading&gt;
  &lt;subheading&gt;
   &lt;item20&gt;Build indexes for a CSV using dictionaries&lt;/item20&gt;
  &lt;/subheading&gt; &lt;module6&gt;</content_main_description><Projects><value>Guided Project: Building Fast Queries on a CSV</value></Projects><Amount>Enroll for Free</Amount></item>
<item><title>APIs in R</title><short description>Learn how to acquire data from APIs.</short description><description>Although there are many datasets available in convenient formats like CSVs, there is also a large amount of data that is accessible only via an API. If you want to analyze streaming data from Twitter, for example, or dig into posting trends on Reddit, you need to get that data from the relevant APIs.</description><Skills>Query external data sources using an API|Query using an API with authentication</Skills><content_main_description>&lt;?xml version = "1.0"?&gt;
&lt;main module&gt;
 &lt;module1&gt;
  &lt;heading&gt;Working with APIs in R&lt;/heading&gt;
  &lt;subheading&gt;
   &lt;item1&gt;Identify the advantages of working with APIs&lt;/item1&gt;
   &lt;item2&gt;Process API requests&lt;/item2&gt;
   &lt;item3&gt;Define the JSON data format&lt;/item3&gt;
  &lt;/subheading&gt; &lt;module1&gt; &lt;module2&gt;
  &lt;heading&gt;Intermediate APIs in R&lt;/heading&gt;
  &lt;subheading&gt;
   &lt;item5&gt;Authenticate with APIs&lt;/item5&gt;
   &lt;item6&gt;Identify the different types of API requests&lt;/item6&gt;
  &lt;/subheading&gt; &lt;module2&gt; &lt;module3&gt;
  &lt;heading&gt;Challenge: Working with Different APIs in R&lt;/heading&gt;
  &lt;subheading&gt;
   &lt;item8&gt;Employ different APIs&lt;/item8&gt;
   &lt;item9&gt;Employ different APIs requests types&lt;/item9&gt;
  &lt;/subheading&gt; &lt;module3&gt; &lt;module4&gt;
  &lt;heading&gt;Guided Project: New York Solar Resource Data&lt;/heading&gt;
  &lt;subheading&gt;
   &lt;item11&gt;Expand your portfolio with a guided API project&lt;/item11&gt;
   &lt;item12&gt;Overcome common setbacks in data analysis&lt;/item12&gt;
  &lt;/subheading&gt; &lt;module4&gt;</content_main_description><Projects><value>Guided Project: New York Solar Resource Data</value></Projects><Amount>Enroll for Free</Amount></item>
<item><title>Analyzing Data with Excel</title><short description>Learn to analyze data with Excel. Discover business insights using PivotTables, time-series analysis, data visualization, and linear regression.</short description><description>This course is part of the “</description><Skills>Use PivotTables to analyze data and discover business insights|Work with time-series data to identify trends over time|Summarize and visualize relationships between categorical and quantitative variables|Confirm a relationship between an independent and dependent variable using linear regression|Estimate the sensitivity of an output to given inputs</Skills><content_main_description>&lt;?xml version = "1.0"?&gt;
&lt;main module&gt;
 &lt;module1&gt;
  &lt;heading&gt;Variance Analysis in Excel &lt;/heading&gt;
  &lt;subheading&gt;
   &lt;item1&gt;Roll up and drill down on a dataset using PivotTables&lt;/item1&gt;
   &lt;item2&gt;Identify differences to budget or previous period&lt;/item2&gt;
   &lt;item3&gt;Create custom groupings within a defined hierarchy&lt;/item3&gt;
  &lt;/subheading&gt; &lt;module1&gt; &lt;module2&gt;
  &lt;heading&gt;Trend Analysis in Excel&lt;/heading&gt;
  &lt;subheading&gt;
   &lt;item5&gt;Resample time series data using PivotTables&lt;/item5&gt;
   &lt;item6&gt;Visualize trends&lt;/item6&gt;
   &lt;item7&gt;Perform basic forecasting&lt;/item7&gt;
  &lt;/subheading&gt; &lt;module2&gt; &lt;module3&gt;
  &lt;heading&gt;Exploratory Data Analysis in Excel&lt;/heading&gt;
  &lt;subheading&gt;
   &lt;item9&gt;Summarize data with proportion tables and descriptive statistics&lt;/item9&gt;
   &lt;item10&gt;Visualize the distributions of two or more categories&lt;/item10&gt;
   &lt;item11&gt;Explore the relationship of two continuous variables with correlations&lt;/item11&gt;
  &lt;/subheading&gt; &lt;module3&gt; &lt;module4&gt;
  &lt;heading&gt;Confirmatory Data Analysis in Excel&lt;/heading&gt;
  &lt;subheading&gt;
   &lt;item13&gt;Compare the difference in means between two groups for statistical significance&lt;/item13&gt;
   &lt;item14&gt;Build a basic linear regression model&lt;/item14&gt;
   &lt;item15&gt;Visualize important statistics concepts using Excel&lt;/item15&gt;
  &lt;/subheading&gt; &lt;module4&gt; &lt;module5&gt;
  &lt;heading&gt;Business and Financial Modeling in Excel&lt;/heading&gt;
  &lt;subheading&gt;
   &lt;item17&gt;Estimate the sensitivity of an output to given inputs&lt;/item17&gt;
   &lt;item18&gt;Build a scenario manager to anticipate possible outcomes&lt;/item18&gt;
   &lt;item19&gt;Perform what-if analysis to estimate a project’s breakeven point &lt;/item19&gt;
  &lt;/subheading&gt; &lt;module5&gt; &lt;module6&gt;
  &lt;heading&gt;Guided Project: Analyzing Retail Sales&lt;/heading&gt;
  &lt;subheading&gt;
   &lt;item21&gt;Combine and profile data sources&lt;/item21&gt;
   &lt;item22&gt;Analyze and visualize trends in sales over time&lt;/item22&gt;
   &lt;item23&gt;Analyze changes over time at varying levels of a hierarchy&lt;/item23&gt;
   &lt;item24&gt;Model future business scenarios for impact on profitability&lt;/item24&gt;
  &lt;/subheading&gt; &lt;module6&gt;</content_main_description><Projects><value>Guided Project: Analyzing Retail Sales</value></Projects><Amount>Enroll for Free</Amount></item>
<item><title>Building a Data Pipeline</title><short description>Learn how to build a Python data pipeline from scratch.</short description><description>In this course, you’ll learn how to build a simple data pipeline using imperative and functional paradigms. You’ll also learn how to use functional closures in Python, how to implement a well-designed pipeline API, how to write decorators, and how to apply them to functions. </description><Skills>Define functional programming|Define advanced Python concepts such as closures and decorators|Write a robust data pipeline with a scheduler in Python</Skills><content_main_description>&lt;?xml version = "1.0"?&gt;
&lt;main module&gt;
 &lt;module1&gt;
  &lt;heading&gt;Functional Programming&lt;/heading&gt;
  &lt;subheading&gt;
   &lt;item1&gt;Identify the differences between imperative and functional programming&lt;/item1&gt;
   &lt;item2&gt;Write code in Python in a functional style using map, reduce, and filter&lt;/item2&gt;
  &lt;/subheading&gt; &lt;module1&gt; &lt;module2&gt;
  &lt;heading&gt;Pipeline Tasks&lt;/heading&gt;
  &lt;subheading&gt;
   &lt;item4&gt;Build task functions in a pipeline&lt;/item4&gt;
   &lt;item5&gt;Write functions using the functional paradigm&lt;/item5&gt;
  &lt;/subheading&gt; &lt;module2&gt; &lt;module3&gt;
  &lt;heading&gt;Building a Pipeline Class&lt;/heading&gt;
  &lt;subheading&gt;
   &lt;item7&gt;Implement functional closures in Python&lt;/item7&gt;
   &lt;item8&gt;Apply decorators to functions&lt;/item8&gt;
   &lt;item9&gt;Implement a pipeline API&lt;/item9&gt;
  &lt;/subheading&gt; &lt;module3&gt; &lt;module4&gt;
  &lt;heading&gt;Multiple Dependency Pipeline&lt;/heading&gt;
  &lt;subheading&gt;
   &lt;item11&gt;Define graph theory&lt;/item11&gt;
   &lt;item12&gt;Implement a directed acyclic graph in Python&lt;/item12&gt;
   &lt;item13&gt;Write a scheduler for the pipeline class&lt;/item13&gt;
  &lt;/subheading&gt; &lt;module4&gt; &lt;module5&gt;
  &lt;heading&gt;Guided Project: Hacker News Pipeline&lt;/heading&gt;
  &lt;subheading&gt;
   &lt;item15&gt;Process JSON API data in Python.&lt;/item15&gt;
   &lt;item16&gt;Expand your portfolio by building a data pipeline&lt;/item16&gt;
  &lt;/subheading&gt; &lt;module5&gt;</content_main_description><Projects><value>Guided Project: Hacker News Pipeline</value></Projects><Amount>Enroll for Free</Amount></item>
<item><title>APIs and Web Scraping in Python</title><short description>Learn how to acquire data from APIs and the web.</short description><description>In this course, you’ll learn how to access APIs, including how to create and process API requests; how to deal with data in the JSON format using Python and pandas; and how to handle advanced requests such as POST, PUT/PATCH, and DELETE. You’ll apply your new API skills by working with the Reddit API to perform real-world data analysis. </description><Skills>Query external data sources using an API|Scrape data from the web</Skills><content_main_description>&lt;?xml version = "1.0"?&gt;
&lt;main module&gt;
 &lt;module1&gt;
  &lt;heading&gt;Working with APIs&lt;/heading&gt;
  &lt;subheading&gt;
   &lt;item1&gt;Identify the advantages of APIs&lt;/item1&gt;
   &lt;item2&gt;Create and process API requests&lt;/item2&gt;
   &lt;item3&gt;Define the JSON data format&lt;/item3&gt;
  &lt;/subheading&gt; &lt;module1&gt; &lt;module2&gt;
  &lt;heading&gt;Intermediate APIs&lt;/heading&gt;
  &lt;subheading&gt;
   &lt;item5&gt;Authenticate with APIs&lt;/item5&gt;
   &lt;item6&gt;Identify the different types of API requests&lt;/item6&gt;
  &lt;/subheading&gt; &lt;module2&gt; &lt;module3&gt;
  &lt;heading&gt;Challenge: Working with the reddit API&lt;/heading&gt;
  &lt;subheading&gt;
   &lt;item8&gt;Authenticate with an API&lt;/item8&gt;
   &lt;item9&gt;Identify the different types of API requests&lt;/item9&gt;
  &lt;/subheading&gt; &lt;module3&gt; &lt;module4&gt;
  &lt;heading&gt;Web Scraping&lt;/heading&gt;
  &lt;subheading&gt;
   &lt;item11&gt;Structure webpages using HTML&lt;/item11&gt;
   &lt;item12&gt;Employ web scraping&lt;/item12&gt;
  &lt;/subheading&gt; &lt;module4&gt;</content_main_description><Projects><value></value></Projects><Amount>Enroll for Free</Amount></item>
</items>